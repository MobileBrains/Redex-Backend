<div class="container-fluid">
  <div class="row">
    <div class="col-md-9">
      <div class="text-center">
        <div id="map" style='width: 100%; height: 480px;'></div>
      </div>
    </div>
    <div class="col-md-3">
      <div>
        <button id="refreshLocations" style="width: 100%; height: 40px">Actualizar Ubicaciones <i class="fa fa-refresh" aria-hidden="true"></i></button>
      </div>
      <hr class="hr_red">
      <div class="text-center" style="margin: 10px 10px;">
        <label class="text_white">Mensajero:</label>
        <%= collection_select(:user, :name, @courriers, :name, :name, {prompt: true},
        {:onchange => "oneCourrierOnly()"} )%>
      </div>
      <div>
        <button id="showAllCourrierLocations" style="width: 100%; height: 40px">Mostrar ubicaciones</button>
      </div>
      <div>
        <button id="showRequestedLocations" style="width: 100%; height: 40px">Mostrar ubicaciones Solicitadas</button>
      </div>
      <div>
        <button id="showAutomaticLocations" style="width: 100%; height: 40px">Mostrar ubicaciones Automaticas</button>
      </div>
      <div>
        <button id="showTodayAndPendentOrders" style="width: 100%; height: 40px">Pendientes entregadas y devolucion</button>
      </div>
      <div>
        <button id="showDeliveredOrdersRoute" style="width: 100%; height: 40px">Ruta de entregas </button>
      </div>
    </div>
  </div>
  <div class="row" style="margin-top: 20px;">
    <div class="col-md-3">
      <h4 class="text_white"> Ubicaciones </h4>
      <hr class="hr_red">
      <p class="text_white">Muestra las ubicaciones Automaticas y Solicitadas del mensajero seleccionado.</p>
    </div>
    <div class="col-md-3">
      <h4 class="text_white"> Ubicaciones Solicitadas</h4>
      <p class="text_white">Hay momentos en los que se desea corroborar la informacion y se solicita a el mensajero que manualmente envie un reporte de unbicacion.</p>
      <hr class="hr_red">
      <h4 class="text_white"> Ubicaciones Automaticas</h4>

      <p class="text_white"> Estas ubicaciones son enviadas automaticamente por el dispositivo cada 5 minutos, este proceso comienza una vez el usuario inicia sesion como mensajero.</p>


    </div>
    <div class="col-md-3">
      <h4 class="text_white"> Pendientes, Entregas y Devoluciones</h4>
      <hr class="hr_red">
      <p class="text_white">Es una ilustracion del cargue del mensajero sobre el mapa<br><br> <strong>pendientes:</strong> Muestra una ubicacion aproximada de donde debe ser entregada la guia <br>
      <strong>Entregadas:</strong> Deja un registro de la ubicacion donde fue entregada la guia <br>
      <strong>Devoluciones:</strong> Deja un registro de la ubicacion donde se realizo la deovolucion o negacion de la entrega.
      </p>

    </div>
    <div class="col-md-3">
      <h4 class="text_white">Ruta de entregas</h4>
      <hr class="hr_red">
      <p class="text_white">Permite conocer el lugar, orden y hora en el que se realizan las entregas del mensajero.</p>

    </div>
  </div>
</div>

<script type="text/javascript">

$(function(){
  intializeMap();
});

$('#refreshLocations').click(function() {
    location.reload();
});

$('#showAllCourrierLocations').click(function() {
    allCourrierLocations()
});

$('#showRequestedLocations').click(function() {
    requestedCourrierRoute()
});

$('#showAutomaticLocations').click(function() {
    automaticCourrierRoute()
});

$('#showTodayAndPendentOrders').click(function() {
    todayAndPendentOrders()
});

$('#showDeliveredOrdersRoute').click(function() {
    deliveredOrdersRoute()
});



function intializeMap(){
  handler = Gmaps.build('Google');
  handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
    markers = handler.addMarkers(<%=raw @hash.to_json %>);
    handler.bounds.extendWith(markers);
    handler.fitMapToBounds();
  });
}

function intializeMapOneCourrierOnly(data){
  handler = Gmaps.build('Google');
  handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
    markers = handler.addMarkers(data);
    handler.bounds.extendWith(markers);
    handler.fitMapToBounds();
  });
}

function allCourrierLocations(){

  $.ajax({
          url: '/maps/allCourrierLocations/',
          type: 'POST',
          data: {
            courrier_name: $('#user_name').val()
          },
          success: function(data) {
            var d = data;
            intializeMapAllCourrierLocations(data)
          },
          error: function(data) {
            console.log(data);
          }
        });
}

function intializeMapAllCourrierLocations(data){
  handler = Gmaps.build('Google');
  handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
    markers = handler.addMarkers(data);
    handler.bounds.extendWith(markers);
    handler.fitMapToBounds();
  });
}

function oneCourrierOnly(){

  $.ajax({
          url: '/maps/oneCourrierOnly/',
          type: 'POST',
          data: {
            courrier_name: $('#user_name').val()
          },
          success: function(data) {
            var d = data;
            intializeMapOneCourrierOnly(data)
          },
          error: function(data) {
            console.log(data);
          }
        });
}

function intializeMapRequestedRoute(data){
  handler = Gmaps.build('Google');
  handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
    markers = handler.addMarkers(data);
    handler.bounds.extendWith(markers);
    handler.fitMapToBounds();
  });
}

function requestedCourrierRoute(){
  $.ajax({
          url: '/maps/requestedCourrierRoute/',
          type: 'POST',
          data: {
            courrier_name: $('#user_name').val()
          },
          success: function(data) {
            intializeMapRequestedRoute(data)
          },
          error: function(data) {
            console.log(data);
          }
        });
}

function intializeMapAutomaticRoute(data){
  handler = Gmaps.build('Google');
  handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
    markers = handler.addMarkers(data);
    handler.bounds.extendWith(markers);
    handler.fitMapToBounds();
  });
}

function automaticCourrierRoute(){
  console.error($('#courrier_name').val())

  $.ajax({
          url: '/maps/automaticCourrierRoute/',
          type: 'POST',
          data: {
            courrier_name: $('#user_name').val()
          },
          success: function(data) {
            intializeMapAutomaticRoute(data)
          },
          error: function(data) {
            console.log(data);
          }
        });
}

function todayAndPendentOrders(){
  $.ajax({
          url: '/maps/todayAndPendentOrders/',
          type: 'POST',
          data: {
            courrier_name: $('#user_name').val()
          },
          success: function(data) {
            intializeMapTodayDeliveredOrders(data)
          },
          error: function(data) {
            console.log(data);
          }
        });
}

function intializeMapTodayDeliveredOrders(data){
  handler = Gmaps.build('Google');
  handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
    markers = handler.addMarkers(data);
    handler.bounds.extendWith(markers);
    handler.fitMapToBounds();
  });
}


function deliveredOrdersRoute(){
  $.ajax({
          url: '/maps/deliveredOrdersRoute/',
          type: 'POST',
          data: {
            courrier_name: $('#user_name').val()
          },
          success: function(data) {
            intializeMapTodayDeliveredOrders(data)
          },
          error: function(data) {
            console.log(data);
          }
        });
}

function intializeMapTodayDeliveredOrders(data){
  handler = Gmaps.build('Google');
  handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
    markers = handler.addMarkers(data);
    handler.bounds.extendWith(markers);
    handler.fitMapToBounds();
  });
}

</script>

